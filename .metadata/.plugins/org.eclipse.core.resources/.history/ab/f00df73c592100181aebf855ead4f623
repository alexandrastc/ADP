package source;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Random;

public class Consumator implements Runnable {
	
	private static Queue<Integer> q;
	static Random rand = new Random(System.currentTimeMillis());
	private static main ProducatorConsumator;
	private static int MAX_SIZE;
	
	Consumator(Queue<Integer> q, main ProducatorConsumator, int MAX_SIZE){
		this.q = q;
		this.ProducatorConsumator = ProducatorConsumator;
		this.MAX_SIZE = MAX_SIZE;
	}

	private static synchronized void removeFromQueue(String name){
	    
    	int numar = q.remove();
        System.out.println("Am scos: " + numar + ", threadul: " + name);
    
    }
	
	@Override
	public void run() {
    	

        	
        	while(true){
        		
        		try{
        			
        			synchronized(q){
        				
	        			while(q.size() == 0){
	        			
	        				synchronized(ProducatorConsumator){
	        					main.ProducatorConsumator.wait();
	        				}
	        			}
        			}
        			
        			removeFromQueue("consumator");
        			
        			Thread.sleep(1000);
        			
        			synchronized(ProducatorConsumator){
        				main.ProducatorConsumator.notify();
        			}
        			
        			
        			
        		} catch (Exception e){
        			
        			e.printStackTrace();
        			
        		}
        	
        	}
       
       
    };

}
